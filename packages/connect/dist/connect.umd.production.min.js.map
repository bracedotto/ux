{"version":3,"file":"connect.umd.production.min.js","sources":["../src/popup.ts","../src/auth.ts","../src/transactions/types.ts","../src/transactions/index.ts","../src/ui.ts"],"sourcesContent":["interface PopupOptions {\n  url?: string;\n  title?: string;\n  w?: number;\n  h?: number;\n  skipPopupFallback?: boolean;\n}\n\n// Width 2px wider than in-page dialog.\n// Ensures retina subpixel rounding\n// does not leave slightly blurry underlap\nconst defaultWidth = 442;\nconst defaultHeight = 532;\nconst defaultTitle = 'Continue with Secret Key';\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Window/open\nexport const popupCenter = ({\n  url,\n  title = defaultTitle,\n  w = defaultWidth,\n  h = defaultHeight,\n  skipPopupFallback,\n}: PopupOptions) => {\n  const win = window;\n  // Safari reports an incorrect browser height\n  const isSafari = (win as any).safari !== undefined;\n\n  const browserViewport = {\n    width: win.innerWidth,\n    height: win.innerHeight,\n  };\n  const browserToolbarHeight = win.outerHeight - win.innerHeight;\n  const browserSidepanelWidth = win.outerWidth - win.innerWidth;\n\n  // Such as fixed operating system UI\n  const removeUnusableSpaceX = (coord: number) =>\n    coord - (win.screen.width - win.screen.availWidth);\n  const removeUnusableSpaceY = (coord: number) =>\n    coord - (win.screen.height - win.screen.availHeight);\n\n  const browserPosition = {\n    x: removeUnusableSpaceX(win.screenX),\n    y: removeUnusableSpaceY(win.screenY),\n  };\n\n  const left = browserPosition.x + browserSidepanelWidth + (browserViewport.width - w) / 2;\n  const top =\n    browserPosition.y +\n    browserToolbarHeight +\n    (browserViewport.height - h) / 2 +\n    (isSafari ? 48 : 0);\n\n  const options = {\n    scrollbars: 'no',\n    width: w,\n    height: h,\n    top,\n    left,\n  };\n  const optionsString = Object.keys(options).map(key => {\n    return `${key}=${options[key as keyof typeof options]}`;\n  });\n  const newWindow = window.open(url, title, optionsString.join(','));\n\n  if (newWindow) {\n    newWindow.focus();\n    return newWindow;\n  }\n\n  // no popup options, just open the auth page\n  if (skipPopupFallback) {\n    return newWindow;\n  }\n  return window.open(url);\n};\n\ninterface ListenerParams<FinishedType> {\n  popup: Window | null;\n  messageParams: {\n    [key: string]: any;\n  };\n  onFinish: (payload: FinishedType) => void | Promise<void>;\n  onCancel?: () => void;\n  authURL: URL;\n}\n\nexport const setupListener = <T>({\n  popup,\n  messageParams,\n  onFinish,\n  onCancel,\n  authURL,\n}: ListenerParams<T>) => {\n  let lastPong: number | null = null;\n\n  // Send a message to the authenticator popup at a consistent interval. This allows\n  // the authenticator to 'respond'.\n  const pingInterval = 250;\n  const interval = setInterval(() => {\n    if (popup) {\n      try {\n        popup.postMessage(\n          {\n            method: 'ping',\n            ...messageParams,\n          },\n          authURL.origin\n        );\n      } catch (error) {\n        console.warn('[Blockstack] Unable to send ping to authentication service');\n        clearInterval(interval);\n      }\n    } else {\n      console.warn('[Blockstack] Unable to send ping to authentication service - popup closed');\n    }\n    // If we haven't received a \"pong\" recently, then the popup was probably closed\n    // by the user. 750ms has been tested by most browsers. Most respond in less than\n    // 500ms, although Safari can often take around 600-650ms.\n    if (lastPong && new Date().getTime() - lastPong > pingInterval * 8) {\n      onCancel && onCancel();\n      clearInterval(interval);\n    }\n  }, pingInterval);\n\n  const receiveMessage = async (event: MessageEvent) => {\n    if (event.data.method === 'pong') {\n      lastPong = new Date().getTime();\n      return;\n    }\n    if (event.data.source === 'blockstack-app') {\n      const data = event.data as T;\n      await onFinish(data);\n      window.focus();\n      window.removeEventListener('message', receiveMessageCallback);\n      clearInterval(interval);\n    }\n  };\n\n  const receiveMessageCallback = (event: MessageEvent) => {\n    void receiveMessage(event);\n  };\n\n  window.addEventListener('message', receiveMessageCallback, false);\n};\n","import { AppConfig, UserSession } from 'blockstack';\nimport './types';\nimport { popupCenter, setupListener } from './popup';\nimport { version } from '../package.json';\n\nexport const defaultAuthURL = 'https://app.blockstack.org';\n\nif (typeof window !== 'undefined') {\n  (window as any).__CONNECT_VERSION__ = version;\n}\n\nexport interface FinishedData {\n  authResponse: string;\n  userSession: UserSession;\n}\n\nexport interface AuthOptions {\n  /** The URL you want the user to be redirected to after authentication. */\n  redirectTo?: string;\n  manifestPath?: string;\n  /** DEPRECATED: use `onFinish` */\n  finished?: (payload: FinishedData) => void;\n  /**\n   * This callback is fired after authentication is finished.\n   * The callback is called with a single object argument, with two keys:\n   * `userSession`: a UserSession object with `userData` included\n   * `authResponse`: the raw `authResponse` string that is returned from authentication\n   * */\n  onFinish?: (payload: FinishedData) => void;\n  /** This callback is fired if the user exits before finishing */\n  onCancel?: () => void;\n  authOrigin?: string;\n  sendToSignIn?: boolean;\n  userSession?: UserSession;\n  appDetails: {\n    name: string;\n    icon: string;\n  };\n}\n\nexport const isMobile = () => {\n  const ua = navigator.userAgent;\n  if (/android/i.test(ua)) {\n    return true;\n  }\n  if (/iPad|iPhone|iPod/.test(ua)) {\n    return true;\n  }\n  if (/safari/i.test(ua)) {\n    return true;\n  }\n  if (/windows phone/i.test(ua)) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * mobile should not use a 'popup' type of window.\n */\nexport const shouldUsePopup = () => {\n  return !isMobile();\n};\n\nexport const getOrCreateUserSession = (userSession?: UserSession): UserSession => {\n  if (!userSession) {\n    const appConfig = new AppConfig(['store_write'], document.location.href);\n    userSession = new UserSession({ appConfig });\n  }\n  return userSession;\n};\n\nexport const authenticate = async ({\n  redirectTo = '/',\n  manifestPath,\n  finished,\n  onFinish,\n  onCancel,\n  authOrigin,\n  sendToSignIn = false,\n  userSession: _userSession,\n  appDetails,\n}: AuthOptions) => {\n  const userSession = getOrCreateUserSession(_userSession);\n  if (userSession.isUserSignedIn()) {\n    userSession.signUserOut();\n  }\n  const transitKey = userSession.generateAndStoreTransitKey();\n  const authRequest = userSession.makeAuthRequest(\n    transitKey,\n    `${document.location.origin}${redirectTo}`,\n    `${document.location.origin}${manifestPath}`,\n    userSession.appConfig.scopes,\n    undefined,\n    undefined,\n    {\n      sendToSignIn,\n      appDetails,\n      connectVersion: version,\n    }\n  );\n\n  const params = window.location.search\n    .substr(1)\n    .split('&')\n    .filter(param => param.startsWith('utm'))\n    .map(param => param.split('='));\n  const urlParams = new URLSearchParams();\n  params.forEach(([key, value]) => urlParams.set(key, value));\n  urlParams.set('authRequest', authRequest);\n\n  const path = sendToSignIn ? 'sign-in' : 'sign-up';\n\n  const extensionURL = await window.BlockstackProvider?.getURL();\n  const authURL = new URL(extensionURL || authOrigin || defaultAuthURL);\n\n  const url = `${authURL.origin}/index.html#/${path}?${urlParams.toString()}`;\n  if (shouldUsePopup()) {\n    const popup = popupCenter({\n      url,\n      // If the extension is installed, dont worry about popup blocking\n      // Otherwise, firefox will open the popup and a new tab.\n      skipPopupFallback: !!window.BlockstackProvider,\n    });\n\n    setupAuthListener({\n      popup,\n      authRequest,\n      onFinish: onFinish || finished,\n      authURL,\n      userSession,\n      onCancel,\n    });\n    return;\n  }\n\n  document.location.href = url;\n};\n\ninterface FinishedEventData {\n  authResponse: string;\n  authRequest: string;\n  source: string;\n}\n\ninterface ListenerParams {\n  popup: Window | null;\n  authRequest: string;\n  onFinish?: (payload: FinishedData) => void;\n  onCancel?: () => void;\n  authURL: URL;\n  userSession: UserSession;\n}\n\nconst setupAuthListener = ({\n  popup,\n  authRequest,\n  onFinish,\n  onCancel,\n  authURL,\n  userSession,\n}: ListenerParams) => {\n  setupListener<FinishedEventData>({\n    popup,\n    onCancel,\n    onFinish: async (data: FinishedEventData) => {\n      if (data.authRequest === authRequest) {\n        if (onFinish) {\n          const { authResponse } = data;\n          await userSession.handlePendingSignIn(authResponse);\n          onFinish({\n            authResponse,\n            userSession,\n          });\n        }\n      }\n    },\n    messageParams: {\n      authRequest,\n    },\n    authURL,\n  });\n};\n\nexport const getUserData = async (userSession?: UserSession) => {\n  userSession = getOrCreateUserSession(userSession);\n  if (userSession.isUserSignedIn()) {\n    return userSession.loadUserData();\n  }\n  if (userSession.isSignInPending()) {\n    return userSession.handlePendingSignIn();\n  }\n  return null;\n};\n","import { UserSession } from 'blockstack';\nimport { AuthOptions } from '../auth';\nimport {\n  PostConditionMode,\n  PostCondition,\n  StacksNetwork,\n  AnchorMode,\n  ClarityValue,\n} from '@blockstack/stacks-transactions';\nimport BN from 'bn.js';\n\nexport interface TxBase {\n  appDetails?: AuthOptions['appDetails'];\n  postConditionMode?: PostConditionMode;\n  postConditions?: PostCondition[];\n  network?: StacksNetwork;\n  anchorMode?: AnchorMode;\n  senderKey?: string;\n  nonce?: number;\n}\n\nexport interface FinishedTxData {\n  txId: string;\n  txRaw: string;\n}\n\nexport enum TransactionTypes {\n  ContractCall = 'contract_call',\n  ContractDeploy = 'smart_contract',\n  STXTransfer = 'token_transfer',\n}\n\n/**\n * Contract Call\n */\n\nexport enum ContractCallArgumentType {\n  BUFFER = 'buffer',\n  UINT = 'uint',\n  INT = 'int',\n  PRINCIPAL = 'principal',\n  BOOL = 'bool',\n}\n\nexport interface ContractCallBase extends TxBase {\n  contractAddress: string;\n  contractName: string;\n  functionName: string;\n  functionArgs: (string | ClarityValue)[];\n}\n\nexport interface ContractCallOptions extends ContractCallBase {\n  authOrigin?: string;\n  userSession?: UserSession;\n  finished?: (data: FinishedTxData) => void;\n}\n\nexport interface ContractCallArgument {\n  type: ContractCallArgumentType;\n  value: string;\n}\n\nexport interface ContractCallPayload extends ContractCallBase {\n  txType: TransactionTypes.ContractCall;\n  publicKey: string;\n  functionArgs: string[];\n}\n\n/**\n * Contract Deploy\n */\nexport interface ContractDeployBase extends TxBase {\n  contractName: string;\n  codeBody: string;\n}\n\nexport interface ContractDeployOptions extends ContractDeployBase {\n  authOrigin?: string;\n  userSession?: UserSession;\n  finished?: (data: FinishedTxData) => void;\n}\n\nexport interface ContractDeployPayload extends ContractDeployOptions {\n  publicKey: string;\n  txType: TransactionTypes.ContractDeploy;\n}\n\n/**\n * STX Transfer\n */\n\nexport interface STXTransferBase extends TxBase {\n  recipient: string;\n  amount: BN | string;\n  memo?: string;\n}\n\nexport interface STXTransferOptions extends STXTransferBase {\n  authOrigin?: string;\n  userSession?: UserSession;\n  finished?: (data: FinishedTxData) => void;\n}\n\nexport interface STXTransferPayload extends STXTransferOptions {\n  publicKey: string;\n  txType: TransactionTypes.STXTransfer;\n  amount: string;\n}\n\n/**\n * Transaction Popup\n */\n\nexport type TransactionOptions = ContractCallOptions | ContractDeployOptions | STXTransferOptions;\nexport type TransactionPayload = ContractCallPayload | ContractDeployPayload | STXTransferPayload;\n\nexport interface TransactionPopup {\n  token: string;\n  opts: TransactionOptions;\n}\n","import { UserSession, AppConfig } from 'blockstack';\nimport { SECP256K1Client, TokenSigner } from 'jsontokens';\nimport { defaultAuthURL } from '../auth';\nimport { popupCenter, setupListener } from '../popup';\nimport {\n  ContractCallOptions,\n  ContractCallPayload,\n  ContractDeployOptions,\n  ContractDeployPayload,\n  FinishedTxData,\n  TransactionPopup,\n  TransactionOptions,\n  STXTransferOptions,\n  STXTransferPayload,\n  TransactionPayload,\n  TransactionTypes,\n} from './types';\nimport { serializeCV } from '@blockstack/stacks-transactions';\n\nexport * from './types';\n\nconst getKeys = (_userSession?: UserSession) => {\n  let userSession = _userSession;\n\n  if (!userSession) {\n    const appConfig = new AppConfig(['store_write'], document.location.href);\n    userSession = new UserSession({ appConfig });\n  }\n\n  const privateKey = userSession.loadUserData().appPrivateKey;\n  const publicKey = SECP256K1Client.derivePublicKey(privateKey);\n\n  return { privateKey, publicKey };\n};\n\nconst signPayload = async (payload: TransactionPayload, privateKey: string) => {\n  const tokenSigner = new TokenSigner('ES256k', privateKey);\n  return tokenSigner.signAsync(payload as any);\n};\n\nconst openTransactionPopup = async ({ token, opts }: TransactionPopup) => {\n  const extensionURL = await window.BlockstackProvider?.getURL();\n  const authURL = new URL(extensionURL || opts.authOrigin || defaultAuthURL);\n  const urlParams = new URLSearchParams();\n  urlParams.set('request', token);\n\n  const popup = popupCenter({\n    url: `${authURL.origin}/index.html#/transaction?${urlParams.toString()}`,\n    h: 700,\n  });\n\n  setupListener<FinishedTxData>({\n    popup,\n    authURL,\n    onFinish: data => {\n      if (opts.finished) {\n        opts.finished(data);\n      }\n    },\n    messageParams: {},\n  });\n  return popup;\n};\n\nexport const makeContractCallToken = async (opts: ContractCallOptions) => {\n  const { functionArgs, appDetails, userSession, ...options } = opts;\n  const { privateKey, publicKey } = getKeys(userSession);\n\n  const args: string[] = functionArgs.map(arg => {\n    if (typeof arg === 'string') {\n      return arg;\n    }\n    return serializeCV(arg).toString('hex');\n  });\n\n  const payload: ContractCallPayload = {\n    ...options,\n    functionArgs: args,\n    txType: TransactionTypes.ContractCall,\n    publicKey,\n  };\n\n  if (appDetails) {\n    payload.appDetails = appDetails;\n  }\n\n  return signPayload(payload, privateKey);\n};\n\nexport const makeContractDeployToken = async (opts: ContractDeployOptions) => {\n  const { appDetails, userSession, ...options } = opts;\n  const { privateKey, publicKey } = getKeys(userSession);\n\n  const payload: ContractDeployPayload = {\n    ...options,\n    publicKey,\n    txType: TransactionTypes.ContractDeploy,\n  };\n\n  if (appDetails) {\n    payload.appDetails = appDetails;\n  }\n\n  return signPayload(payload, privateKey);\n};\n\nexport const makeSTXTransferToken = async (opts: STXTransferOptions) => {\n  const { amount, appDetails, userSession, ...options } = opts;\n  const { privateKey, publicKey } = getKeys(userSession);\n\n  const payload: STXTransferPayload = {\n    ...options,\n    amount: amount.toString(10),\n    publicKey,\n    txType: TransactionTypes.STXTransfer,\n  };\n\n  if (appDetails) {\n    payload.appDetails = appDetails;\n  }\n\n  return signPayload(payload, privateKey);\n};\n\nasync function generateTokenAndOpenPopup<T extends TransactionOptions>(\n  opts: T,\n  makeTokenFn: (opts: T) => Promise<string>\n) {\n  const token = await makeTokenFn(opts);\n  return openTransactionPopup({ token, opts });\n}\n\nexport const openContractCall = async (opts: ContractCallOptions) =>\n  generateTokenAndOpenPopup(opts, makeContractCallToken);\n\nexport const openContractDeploy = async (opts: ContractDeployOptions) =>\n  generateTokenAndOpenPopup(opts, makeContractDeployToken);\n\nexport const openSTXTransfer = async (opts: STXTransferOptions) =>\n  generateTokenAndOpenPopup(opts, makeSTXTransferToken);\n","import { authenticate, AuthOptions, FinishedData } from './auth';\nimport { defineCustomElements } from '@stacks/connect-ui';\n\nexport const showConnect = (authOptions: AuthOptions) => {\n  defineCustomElements();\n  const element = document.createElement('connect-modal');\n  element.authOptions = authOptions;\n  document.body.appendChild(element);\n  const finishedWrapper = (finishedData: FinishedData) => {\n    element.remove();\n    const callback = authOptions.onFinish || authOptions.finished;\n    if (callback) {\n      callback(finishedData);\n    }\n  };\n  element.addEventListener('onSignUp', () => {\n    authenticate({\n      ...authOptions,\n      sendToSignIn: false,\n      onFinish: finishedWrapper,\n    });\n  });\n  element.addEventListener('onSignIn', () => {\n    authenticate({\n      ...authOptions,\n      sendToSignIn: true,\n      onFinish: finishedWrapper,\n    });\n  });\n  const handleEsc = (ev: KeyboardEvent) => {\n    if (ev.key === 'Escape') {\n      document.removeEventListener('keydown', handleEsc);\n      element.remove();\n    }\n  };\n  element.addEventListener('onCloseModal', () => {\n    document.removeEventListener('keydown', handleEsc);\n    element.remove();\n  });\n  document.addEventListener('keydown', handleEsc);\n};\n\n/**\n * @deprecated Use the renamed `showConnect` method\n */\nexport const showBlockstackConnect = (authOptions: AuthOptions) => showConnect(authOptions);\n"],"names":["popupCenter","url","title","w","h","skipPopupFallback","win","window","isSafari","undefined","safari","browserViewport","innerWidth","innerHeight","browserToolbarHeight","outerHeight","browserSidepanelWidth","outerWidth","browserPosition","screenX","screen","width","availWidth","options","scrollbars","height","top","coord","availHeight","removeUnusableSpaceY","screenY","left","optionsString","Object","keys","map","key","newWindow","open","join","focus","setupListener","popup","messageParams","onFinish","onCancel","authURL","lastPong","interval","setInterval","postMessage","method","origin","error","console","warn","clearInterval","Date","getTime","pingInterval","receiveMessageCallback","event","data","source","removeEventListener","receiveMessage","addEventListener","__CONNECT_VERSION__","TransactionTypes","ContractCallArgumentType","isMobile","ua","navigator","userAgent","test","shouldUsePopup","getOrCreateUserSession","userSession","appConfig","AppConfig","document","location","href","UserSession","authenticate","redirectTo","manifestPath","finished","authOrigin","sendToSignIn","_userSession","appDetails","isUserSignedIn","signUserOut","transitKey","generateAndStoreTransitKey","authRequest","makeAuthRequest","scopes","connectVersion","params","search","substr","split","filter","param","startsWith","urlParams","URLSearchParams","forEach","set","path","BlockstackProvider","_window$BlockstackPro","getURL","extensionURL","URL","toString","setupAuthListener","authResponse","handlePendingSignIn","generateTokenAndOpenPopup","opts","makeTokenFn","token","openTransactionPopup","getKeys","privateKey","loadUserData","appPrivateKey","publicKey","SECP256K1Client","derivePublicKey","signPayload","payload","tokenSigner","TokenSigner","signAsync","makeContractCallToken","functionArgs","arg","serializeCV","txType","ContractCall","makeContractDeployToken","ContractDeploy","makeSTXTransferToken","amount","STXTransfer","showConnect","authOptions","defineCustomElements","element","createElement","body","appendChild","finishedWrapper","finishedData","remove","callback","handleEsc","ev","isSignInPending"],"mappings":"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"}